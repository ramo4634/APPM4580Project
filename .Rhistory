fires <- read.csv("P3_kitchen_area_air_quality_03_20_2019.xlsx")
################################################################
# Final Project
################################################################
library(pROC)
library(dplyr)
library(e1071)
library(MASS)
################################################################
# Final Project
################################################################
library(pROC)
library(dplyr)
library(e1071)
library(MASS)
fires <- read.xlsx("P3_kitchen_area_air_quality_03_20_2019.xlsx")
install.packages("readxl")
library(readxl)
fires <- read.xlsx("P3_kitchen_area_air_quality_03_20_2019.xlsx")
fires <- readxl("P3_kitchen_area_air_quality_03_20_2019.xlsx")
fires <- read_xls("P3_kitchen_area_air_quality_03_20_2019.xlsx")
################################################################
# Final Project
################################################################
library(readxl)
library(e1071)
filename <- "~/Desktop/Spring Semester 2019/APPM 4580/Final Project/APPM4580Project/P3_kitchen_area_air_quality_03_20_2019.xlsx"
dat<- read_excel(filename)
y <- dat$TotalPM25ugcubicmeter_PT
feature_list = c("OCmassugcubicmeter","ECmassugcubicmeter","TCmassugcubicmeter","ECOCmassconc","Mean_bcor_1","Mean_bcor_2","Mean_temp","Mean_rh","Mean_CO","Mean_CO2","Mean_MCE","Var_bcor_1")#,"CoverageClass","season")
X <- dat[feature_list]
#Replace NA values with mean - note this only works for numeric data
for(i in colnames(X)){
print(mean(X[[i]], na.rm=TRUE))
X[[i]][is.na(X[[i]])] <- mean(X[[i]],na.rm=TRUE)
}
X$y <- y
## 60% of the sample size for training 20% for testing and 20% for verification
smp_size <- floor(0.6 * length(y))
set.seed(42)
train_ind <- sample(seq_len(length(y)), size = smp_size)
X.train <- X[train_ind,]
y.train <- y[train_ind]
X.temp <- X[-train_ind,]
y.temp <- y[-train_ind]
smp_size <- floor(0.5*length(y.temp))
test_ind <- sample(seq_len(length(y.temp)), size = smp_size)
X.test <- X.temp[test_ind,]
y.test <- y.temp[test_ind]
X.ver <- X.temp[-test_ind,]
y.test <- y.temp[-test_ind]
fit <- svm(y~.,data=X.train,kernel='linear',cost=2)
y.pred <- predict(fit, X.test)
rmse <- function(error)
{
sqrt(mean(error^2))
}
# ============================================================
#  Finding best model parameters
# ============================================================
error <- fit$residuals
predictionRMSE <- rmse(error)
print(predictionRMSE)
#Grid Search
tuneResult <- tune(svm, y ~ .,  data = X.train, ranges = list(epsilon = seq(0,1,0.1), cost = 2^(2:9)))
print(tuneResult)
tunedModel <- tuneResult$best.model
tunedModelY <- predict(tunedModel, X.test)
error <- y.test - tunedModelY
tunedModelRMSE <- rmse(error)
pairs(dat)
pairs(~.,data = dat)
is(dat)
names(dat)
pairs(TotalPM25ugcubicmeter_PT~OCmassugcubicmeter+ECmassugcubicmeter+TCmassugcubicmeter+ECOCmassconc+Mean_bcor_1+Mean_bcor_2+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat)
pairs(TotalPM25ugcubicmeter_PT~OCmassugcubicmeter+ECmassugcubicmeter+TCmassugcubicmeter+ECOCmassconc+Mean_bcor_1+log(Mean_bcor_2)+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat)
pairs(TotalPM25ugcubicmeter_PT~OCmassugcubicmeter+ECmassugcubicmeter+TCmassugcubicmeter+ECOCmassconc+log(Mean_bcor_1)+log(Mean_bcor_2)+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat)
pairs(TotalPM25ugcubicmeter_PT~OCmassugcubicmeter+ECmassugcubicmeter+TCmassugcubicmeter+ECOCmassconc+log(Mean_bcor_1)+log(Mean_bcor_2)+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat)
fit <- lm(y~.,data=X)
bestFeatures <- regsubsets(dat$TotalPM25ugcubicmeter_PT~OCmassugcubicmeter+ECmassugcubicmeter+TCmassugcubicmeter+ECOCmassconc+log(Mean_bcor_1)+log(Mean_bcor_2)+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat,nvmax=60,method="forward")
library(MASS)
bestFeatures <- regsubsets(dat$TotalPM25ugcubicmeter_PT~OCmassugcubicmeter+ECmassugcubicmeter+TCmassugcubicmeter+ECOCmassconc+log(Mean_bcor_1)+log(Mean_bcor_2)+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat,nvmax=60,method="forward")
################################################################
# Final Project
################################################################
library(readxl)
library(pROC)
library(dplyr)
library(e1071)
bestFeatures <- regsubsets(dat$TotalPM25ugcubicmeter_PT~OCmassugcubicmeter+ECmassugcubicmeter+TCmassugcubicmeter+ECOCmassconc+log(Mean_bcor_1)+log(Mean_bcor_2)+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat,nvmax=60,method="forward")
################################################################
# Final Project
################################################################
library(readxl)
library(pROC)
library(dplyr)
library(e1071)
library(MASS)
library(fields)
library(pROC)
library(ISLR)
library(leaps)
library(party)
bestFeatures <- regsubsets(dat$TotalPM25ugcubicmeter_PT~OCmassugcubicmeter+ECmassugcubicmeter+TCmassugcubicmeter+ECOCmassconc+log(Mean_bcor_1)+log(Mean_bcor_2)+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat,nvmax=60,method="forward")
is(bestFeatures)
names(bestFeatures)
summary(bestFeatures)
plot(sb$bic)
plot(sb$cp)
plot(sb$rss)
plot(bestFeatures$bic)
plot(bestFeatures$cp)
print(which.min(summary(bestFeatures)$bic)) #1 features
print(which.min(summary(bestFeatures)$cp)) #3 features
print(which.min(summary(bestFeatures)$rss)) #10 features
print(which.max(summary(bestFeatures)$adjr2)) #4 features
plot(bestFeatures)
coef(bestFeatures,4)
pairs(TotalPM25ugcubicmeter_PT~OCmassugcubicmeter+ECmassugcubicmeter+TCmassugcubicmeter+ECOCmassconc+log(Mean_bcor_1)+log(Mean_bcor_2)+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat)
cor(select(dat,TotalPM25ugcubicmeter_PT,OCmassugcubicmeter,ECmassugcubicmeter,TCmassugcubicmeter,ECOCmassconc,log(Mean_bcor_1),log(Mean_bcor_2),Mean_temp,Mean_rh,Mean_CO,Mean_CO2,Mean_MCE))
cor(select(dat,TotalPM25ugcubicmeter_PT,OCmassugcubicmeter,ECmassugcubicmeter,TCmassugcubicmeter,ECOCmassconc,Mean_bcor_1,Mean_bcor_2,Mean_temp,Mean_rh,Mean_CO,Mean_CO2,Mean_MCE))
boxplot(dat)
boxplot(dat)
print(which.min(summary(bestFeatures)$bic)) #1 features
print(which.min(summary(bestFeatures)$cp)) #3 features
print(which.min(summary(bestFeatures)$rss)) #10 features
print(which.max(summary(bestFeatures)$adjr2)) #4 features
plot(bestFeatures)
coef(bestFeatures,4)
pairs(TotalPM25ugcubicmeter_PT~OCmassugcubicmeter+ECmassugcubicmeter+TCmassugcubicmeter+ECOCmassconc+log(Mean_bcor_1)+log(Mean_bcor_2)+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat)
################################################################
# Final Project
################################################################
library(readxl)
library(pROC)
library(dplyr)
library(e1071)
library(MASS)
library(fields)
library(pROC)
library(ISLR)
library(leaps)
library(party)
filename <- "~/Desktop/Spring Semester 2019/APPM 4580/Final Project/APPM4580Project/P3_kitchen_area_air_quality_03_20_2019.xlsx"
dat<- read_excel(filename)
y <- dat$TotalPM25ugcubicmeter_PT
feature_list = c("OCmassugcubicmeter","ECmassugcubicmeter","TCmassugcubicmeter","ECOCmassconc","Mean_bcor_1","Mean_bcor_2","Mean_temp","Mean_rh","Mean_CO","Mean_CO2","Mean_MCE","Var_bcor_1")#,"CoverageClass","season")
X <- dat[feature_list]
#Replace NA values with mean - note this only works for numeric data
for(i in colnames(X)){
print(mean(X[[i]], na.rm=TRUE))
X[[i]][is.na(X[[i]])] <- mean(X[[i]],na.rm=TRUE)
}
X$y <- y
is(dat)
names(dat)
str(dat)
summary(dat)
pairs(TotalPM25ugcubicmeter_PT~ECOCmassconc+log(Mean_bcor_1)+log(Mean_bcor_2)+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat)
cor(select(dat,TotalPM25ugcubicmeter_PT,OCmassugcubicmeter,ECmassugcubicmeter,TCmassugcubicmeter,ECOCmassconc,Mean_bcor_1,Mean_bcor_2,Mean_temp,Mean_rh,Mean_CO,Mean_CO2,Mean_MCE))
## 60% of the sample size for training 20% for testing and 20% for verification
smp_size <- floor(0.6 * length(y))
set.seed(42)
train_ind <- sample(seq_len(length(y)), size = smp_size)
X.train <- X[train_ind,]
y.train <- y[train_ind]
X.temp <- X[-train_ind,]
y.temp <- y[-train_ind]
smp_size <- floor(0.5*length(y.temp))
test_ind <- sample(seq_len(length(y.temp)), size = smp_size)
X.test <- X.temp[test_ind,]
y.test <- y.temp[test_ind]
X.ver <- X.temp[-test_ind,]
y.test <- y.temp[-test_ind]
bestFeatures <- regsubsets(dat$TotalPM25ugcubicmeter_PT~ECOCmassconc+log(Mean_bcor_1)+log(Mean_bcor_2)+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat,nvmax=60,method="forward")
is(bestFeatures)
names(bestFeatures)
summary(bestFeatures)
print(which.min(summary(bestFeatures)$bic)) #4 features
print(which.min(summary(bestFeatures)$cp)) #4 features
print(which.min(summary(bestFeatures)$rss)) #10 features
print(which.max(summary(bestFeatures)$adjr2)) #7 features
plot(bestFeatures)
coef(bestFeatures,4)
bestFeatures <- regsubsets(dat$TotalPM25ugcubicmeter_PT~ECOCmassconc+Mean_bcor_1+Mean_bcor_2+Mean_temp+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data = dat,nvmax=60,method="forward")
is(bestFeatures)
names(bestFeatures)
summary(bestFeatures)
print(which.min(summary(bestFeatures)$bic)) #4 features
print(which.min(summary(bestFeatures)$cp)) #4 features
print(which.min(summary(bestFeatures)$rss)) #10 features
print(which.max(summary(bestFeatures)$adjr2)) #7 features
plot(bestFeatures)
coef(bestFeatures,4)
coef(bestFeatures,7)
fit <- lm(TotalPM25ugcubicmeter_PT~ECOCmassconc+Mean_bcor_1+Mean_bcor_2+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data=X.train)
fit <- lm(X.train$TotalPM25ugcubicmeter_PT~ECOCmassconc+Mean_bcor_1+Mean_bcor_2+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data=X.train)
fit <- lm(y~ECOCmassconc+Mean_bcor_1+Mean_bcor_2+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data=X.train)
fit.lm <- lm(y~ECOCmassconc+Mean_bcor_1+Mean_bcor_2+Mean_rh+Mean_CO+Mean_CO2+Mean_MCE,data=X.train)
summary(fit.lm)
coef(bestFeatures,4)
fit.lm <- lm(y~Mean_bcor_1+Mean_rh+Mean_CO+Mean_MCE,data=X.train)
summary(fit.lm)
summary(fit.lm)
anova(fit.lm)
par(mfrow = c(2, 2), main = "Diagnostics",oma = c(0, 0, 2, 0))
par(mfrow = c(2, 2),oma = c(0, 0, 2, 0))
plot(fit.lm)
plot(fit.lm, id.n = NULL)                 # no id's
plot(fit.lm, id.n = 5, labels.id = NULL)  # 5 id numbers
X.train$10
X.train[8,]
X.train[10,]
X.train[8,]
X.train[10,]
X.trian[7,]
X.train[13,]
X.train[7,]
